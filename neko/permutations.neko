var file_stdin = $loader.loadprim("std@file_stdin", 0)
var file_read_char = $loader.loadprim("std@file_read_char", 1)
var string_split = $loader.loadprim("std@string_split", 2)

var print_permutations = function(a, n, print_permutations) {
	if (n <= 0) {
		var i = 0
		while (i < $asize(a)) {
            if (i != 0) $print("\t")
			$print(a[i ++= 1])
		}
		$print("\n");
	} else {
		var i = 0
		while (i < n) {
			print_permutations(a, n - 1, print_permutations)
			var j = if (n % 2 == 0) 0 else i
			var temp = a[j]
			a[j] = a[n]
			a[n] = temp
			i += 1
		}
		print_permutations(a, n - 1, print_permutations)
	}
}

var args = file_stdin()
var phrase = ""

var char = $smake(1)
var total_words = 1
$sset(char, 0, file_read_char(args))
while ($sget(char,0) != 10) {
	phrase += char
	$sset(char, 0, file_read_char(args))
    if (char == " ") {
        total_words += 1
    }
}

var words = $amake(total_words)
var phrase_split = string_split(phrase, " ")
var i = 0
while (i < total_words) {
	words[(i ++= 1)] = phrase_split[0]
	phrase_split = phrase_split[1]
}

if ($ssize(phrase) == 0) {
	$throw("More than 1 argument is required.")
} else {
	print_permutations(words, total_words - 1, print_permutations)
}
